name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
#        # docker build . --file Dockerfile --tag my-image-name:$(date +%s)

# permissions:
#   pull-requests: 

jobs:
  print-token:
      permissions: write-all
      name: print-token
      environment: dev
      # needs: pre-pkr
      runs-on: ubuntu-latest

      steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Get registration token
          id: getRegToken
          run: |
            curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/cicorias/mosquitto-topic-jail-build/actions/runners/registration-token
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: version
      run: echo "::set-output name=version::v$(date +%Y%m%d_%H%M%S)"
      id: version
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag plugin:latest
        docker create --name plugin plugin
        mkdir -p ./plugin
        docker cp plugin:/app/mosquitto_topic_jail_all.so ./plugin/
        docker cp plugin:/usr/bin/mosquitto_pub     ./plugin/
        docker cp plugin:/usr/bin/mosquitto_sub     ./plugin/
        docker cp plugin:/usr/lib/libmosquitto.so.1 ./plugin/
        docker cp plugin:/usr/bin/mosquitto         ./plugin/
        docker cp plugin:/usr/bin/mosquitto_passwd  ./plugin/
        docker cp plugin:/app/test.conf             ./plugin/
        docker cp plugin:/app/test.sh               ./plugin/

        docker rm plugin
        tar -czvf ./plugin/plugin.tar.gz -C ./plugin mosquitto_topic_jail_all.so mosquitto_pub mosquitto_sub mosquitto

    # - name: Pull file from Docker build image
    #   run: docker cp <container-name>:/app/mosquitto_topic_jail_all.so
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.version.outputs.version }}
        body: |
          Release notes for ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./plugin/pluplugin.tar.gz
        asset_name: pluplugin.tar.gz
        asset_content_type: application/octet-stream